[{"/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/index.tsx":"1","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/reportWebVitals.ts":"2","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/App.tsx":"3","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Auth/FunctionalAuth.js":"4","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Auth/Auth.tsx":"5","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Auth/Signup.tsx":"6","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Auth/SignIn.tsx":"7","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Vibes/Playlist/PlaylistCreate.tsx":"8","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Vibes/Playlist/PlaylistIndex.tsx":"9","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Vibes/Playlist/PlaylistEdit.tsx":"10","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Comments/CommentsIndex.tsx":"11","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Comments/CommentsCreate.tsx":"12","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Comments/CommentsEdit.tsx":"13","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Vibes/Playlist/PlaylistTable.tsx":"14","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Comments/CommentsTable.tsx":"15","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/helpers/environment.tsx":"16"},{"size":500,"mtime":1609359376586,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1608306282708,"results":"19","hashOfConfig":"18"},{"size":1236,"mtime":1610552350510,"results":"20","hashOfConfig":"18"},{"size":280,"mtime":1609438577095,"results":"21","hashOfConfig":"18"},{"size":1412,"mtime":1610523889033,"results":"22","hashOfConfig":"18"},{"size":2249,"mtime":1610563877074,"results":"23","hashOfConfig":"18"},{"size":1900,"mtime":1610552874420,"results":"24","hashOfConfig":"18"},{"size":1873,"mtime":1610545906460,"results":"25","hashOfConfig":"18"},{"size":3916,"mtime":1610548189127,"results":"26","hashOfConfig":"18"},{"size":2560,"mtime":1610541494228,"results":"27","hashOfConfig":"18"},{"size":3277,"mtime":1610545488372,"results":"28","hashOfConfig":"18"},{"size":1801,"mtime":1610546059146,"results":"29","hashOfConfig":"18"},{"size":2213,"mtime":1610545571990,"results":"30","hashOfConfig":"18"},{"size":1334,"mtime":1610546196951,"results":"31","hashOfConfig":"18"},{"size":1369,"mtime":1610546177541,"results":"32","hashOfConfig":"18"},{"size":279,"mtime":1610517993188,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1lz00tl",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"36"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/index.tsx",[],["79","80"],"/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/reportWebVitals.ts",[],"/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/App.tsx",["81"],"import React from 'react';\nimport { BrowserRouter as Router, } from 'react-router-dom'\nimport Auth from './Components/Auth/Auth'\nimport PlaylistIndex from './Components/Vibes/Playlist/PlaylistIndex'\nimport CommentsIndex from './Components/Comments/CommentsIndex'\nimport { Component } from 'react'\nimport './App.css';\n\ntype AuthState = {\n  token: string\n}\n\nexport default class App extends Component<{}, AuthState> {\n  constructor(props: string) {\n    super(props);\n    let token = localStorage.getItem('token')\n    this.state = {\n      token: token ? token : '',\n    }\n  }\n\n  updateToken = (newToken: string) => {\n    localStorage.setItem('token', newToken)\n    console.log(newToken)\n    this.setState({\n      token: newToken\n    })\n\n  }\n\n  clearToken = () => {\n    localStorage.clear();\n    this.setState({\n      token: ''\n    })\n  }\n\n  render() {\n    return (\n      <div id=\"app-background\">\n\n        {this.state.token ? <PlaylistIndex updateToken={this.updateToken} token={this.state.token} clearToken={this.clearToken} /> : <Auth updateToken={this.updateToken.bind(this)} />} <br /> <br />\n\n\n        <CommentsIndex updateToken={this.updateToken} token={this.state.token} clearToken={this.clearToken} />\n\n\n\n      </div>\n    )\n  }\n\n}\n","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Auth/FunctionalAuth.js",["82"],"import Auth from './Auth'\nimport {BrowserRouter, Route, Switch } from 'react-router-dom'\n\nfunction FunctionalAuth() {\n    return (\n        <div>\n            <BrowserRouter>\n                <Switch>\n                    <Auth />\n                </Switch>\n            </BrowserRouter>\n        </div>\n    )\n}\n\nexport default FunctionalAuth",["83","84"],"/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Auth/Auth.tsx",["85"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport Signup from './Signup'\nimport SignIn from './SignIn'\n\n\ninterface AuthState {\n    isLogin: boolean\n}\n\ntype AuthProps = {\n    updateToken: (newToken: string) => void\n}\n\nexport default class Auth extends React.Component<AuthProps, AuthState> {\n    constructor(props: AuthProps) {\n        super(props);\n        this.state = {\n            isLogin: true\n        }\n    }\n\n    isLoginHandler() {\n        this.setState({\n            isLogin: !this.state.isLogin\n        })\n    }\n\n    // toggle = (e: React.SyntheticEvent) => {\n    //     e.preventDefault();\n    //     if (this.state.isLogin === false) {\n    //         return this.setState({\n    //             isLogin: true\n    //         })\n    //     }\n    // }\n\n    render() {\n\n\n        return (\n            <div>\n                {/* {this.state.isLogin ? ( */}\n                <SignIn\n                    isLogin={this.state.isLogin}\n                    isLoginHandler={this.isLoginHandler.bind(this)}\n                    updateToken={this.props.updateToken}\n                />\n                {/* // ): ( */}\n                <Signup\n                    isLogin={this.state.isLogin}\n                    isLoginHandler={this.isLoginHandler.bind(this)}\n                    updateToken={this.props.updateToken}\n                />\n                {/* // )} */}\n\n            </div>\n        )\n    }\n\n}\n\n","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Auth/Signup.tsx",["86","87","88","89","90"],"import React from 'react'\nimport { Button, Card, CardContent, TextField } from '@material-ui/core'\nimport PropTypes from 'prop-types'\n// import APIURL from '../../helpers/environment'\n\n\ntype SignUpFields = {\n    username: string,\n    password: string,\n    email: string,\n\n}\n\ntype SignUpProps = {\n    isLogin: boolean,\n    isLoginHandler: () => void,\n    updateToken: (newToken: string) => void\n}\n\nexport default class SignUp extends React.Component<SignUpProps, SignUpFields>{\n    constructor(props: SignUpProps) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            email: '',\n\n        }\n    }\n\n    onChange(e: any) {\n        this.setState(e.target.value)\n    }\n\n    validateForm = () => {\n\n    }\n\n    handleSubmit = (e: React.SyntheticEvent) => {\n        e.preventDefault();\n\n\n        const url = 'http://localhost:4000/user/register'\n\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({ username: this.state.username, password: this.state.password, email: this.state.email }),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Sign Up - Join VibeCast</h1>\n\n                <form onSubmit={this.handleSubmit.bind(this)}>\n                    <input type=\"text\" value={this.state.email} onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ email: e.currentTarget.value })} placeholder=\"email\" />\n                    <br />\n                    <input type=\"text\" value={this.state.username} onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ username: e.currentTarget.value })} placeholder=\"username\" />\n                    <br />\n                    <input type=\"text\" value={this.state.password} onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ password: e.currentTarget.value })} placeholder=\"password\" /><br />\n\n\n                    <button id=\"button\" type=\"submit\">Submit</button>\n                </form>\n            </div>\n        )\n    }\n}","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Auth/SignIn.tsx",["91","92","93","94"],"import React from 'react'\nimport { Button, Card, CardContent, TextField } from '@material-ui/core'\n// import APIURL from '../../helpers/environment'\n\ntype SignInFields = {\n    username: string,\n    password: string\n}\n\ntype SignInProps = {\n    isLogin: boolean,\n    updateToken: (newToken: string) => void,\n    isLoginHandler: () => void\n}\n\n\nexport default class SignIn extends React.Component<SignInProps, SignInFields>{\n    constructor(props: SignInProps) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        }\n    }\n\n    handleSubmit = (e: React.SyntheticEvent) => {\n        e.preventDefault()\n        const url = 'http://localhost:4000/user/login'\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({ username: this.state.username, password: this.state.password }),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                this.props.updateToken(data.token)\n            })\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Sign In - Welcome to VibeCast</h1>\n                <form onSubmit={this.handleSubmit.bind(this)}>\n                    <input type=\"text\" value={this.state.username} onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ username: e.currentTarget.value })} placeholder=\"username\" />\n                    <br />\n                    <input type=\"text\" value={this.state.password} onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ password: e.currentTarget.value })} placeholder=\"password\" />\n                    <br />\n\n\n\n                    <button id=\"button\" type=\"submit\">Submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\n","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Vibes/Playlist/PlaylistCreate.tsx",["95","96","97","98","99","100","101","102"],"import React from 'react'\nimport {\n    Button,\n    Container,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    IconButton,\n    TextField,\n    Typography,\n    ButtonBase\n} from '@material-ui/core';\n// import APIURL from '../../../helpers/environment'\n\ntype Props = {\n    token: string,\n\n\n}\n\ntype State = {\n    title: string,\n    songs: string\n}\n\nexport default class PlaylistCreate extends React.Component<Props, State>{\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            title: '',\n            songs: ''\n        }\n    }\n\n    onChange(e: any) {\n        this.setState(e.target.value)\n    }\n\n    handleSubmit = (e: React.SyntheticEvent) => {\n        e.preventDefault();\n\n        console.log(this.props.token, this.state.title, this.state.songs)\n\n        const url = `http://localhost:4000/playlist/createplaylist`\n        fetch(url, {\n            method: 'POST',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token\n            }),\n            body: JSON.stringify({ Title: this.state.title, Songs: this.state.songs })\n        })\n            .then((res) => res.json())\n            .then((data) => {\n\n\n                console.log(data);\n\n            })\n    }\n\n\n\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <TextField type=\"text\" value={this.state.title} onChange={(e) => this.setState({ title: e.currentTarget.value })} placeholder=\"Playlist title\" />\n                    <TextField type=\"text\" value={this.state.songs} onChange={(e) => this.setState({ songs: e.currentTarget.value })} placeholder=\"Song name - Arist,\" />\n                    <Button id=\"button\" type=\"submit\">Submit</Button>\n\n\n                </form>\n            </div>\n        )\n    }\n\n}","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Vibes/Playlist/PlaylistIndex.tsx",[],"/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Vibes/Playlist/PlaylistEdit.tsx",["103","104"],"import React from 'react';\nimport { TextField } from '@material-ui/core'\n// import APIURL from '../../../helpers/environment'\n\ntype Props = {\n    playlistUpdated: any,\n    token: string,\n    updateOff: () => void,\n    fetchItems: () => void\n    editPlaylist: any | null\n}\n\ntype State = {\n    editTitle: string,\n    editSongs: string,\n    id: number | null,\n    playlist: any | null\n\n}\n\nexport default class PlaylistEdit extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            editTitle: '',\n            editSongs: '',\n            id: this.props.editPlaylist ? this.props.editPlaylist.id : null,\n            playlist: []\n        }\n    }\n\n\n\n    handlePlaylistUpdate = () => {\n        let id = {\n            id: this.state.id\n        }\n\n        const url = `http://localhost:4000/playlist/${this.props.editPlaylist.id}`\n        fetch(url, {\n            method: 'PUT',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token\n            }),\n            body: JSON.stringify({ Title: this.state.editTitle, Songs: this.state.editSongs })\n        }).then(() => {\n            this.props.updateOff();\n            this.props.fetchItems();\n\n        })\n    }\n    // editPlaylistForm() {\n    //     this.props.updateOff()\n    // }\n\n    componentDidUpdate(prevProps: any) {\n        if (this.props != prevProps) {\n            this.setState({\n                playlist: this.props.editPlaylist\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <TextField\n                        type=\"text\"\n                        value={this.state.editTitle}\n                        onChange={(e) => this.setState({ editTitle: e.currentTarget.value })} />\n\n                    <TextField\n                        type=\"text\"\n                        value={this.state.editSongs}\n                        onChange={(e) => this.setState({ editSongs: e.currentTarget.value })} />\n                    {/* <input type=\"text\" value={this.state.editTitle} onChange={(e) => this.setState({ editTitle: e.currentTarget.value })} /> */}\n                    {/* <input type=\"text\" value={this.state.editSongs}\n                        onChange={(e) => this.setState({ editSongs: e.currentTarget.value })}\n                    /> */}\n                    <button onClick={this.handlePlaylistUpdate}>Edit Playlist</button>\n                </form>\n            </div>\n        )\n    }\n}\n","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Comments/CommentsIndex.tsx",[],"/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Comments/CommentsCreate.tsx",["105","106","107","108","109","110","111","112"],"import React from 'react'\nimport {\n    Button,\n    Container,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    IconButton,\n    TextField,\n    Typography,\n    ButtonBase\n} from '@material-ui/core';\n\ntype Props = {\n    token: string\n}\n\ntype State = {\n    title: string,\n    body: string\n}\n\nexport default class CommentsCreate extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            title: '',\n            body: ''\n        }\n    }\n\n    onChange(e: any) {\n        this.setState(e.target.value)\n    }\n\n    handleSubmit = (e: React.SyntheticEvent) => {\n        e.preventDefault()\n        console.log(this.state)\n        let body = {\n            Title: this.state.title,\n            Body: this.state.body\n\n        }\n        const url = 'http://localhost:4000/comment/createcomment'\n\n        fetch(url, {\n            method: 'POST',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token\n            }),\n            body: JSON.stringify(body)\n\n        })\n            .then((res) => res.json())\n            .then((data) => {\n                console.log(data);\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <TextField type=\"text\" value={this.state.title} onChange={(e) => this.setState({ title: e.currentTarget.value })} placeholder=\"Title\" />\n                    <TextField type=\"text\" value={this.state.body} onChange={(e) => this.setState({ body: e.currentTarget.value })} placeholder=\"Body\" />\n\n                    <Button id=\"button\" type=\"submit\">Submit Comment</Button>\n                </form>\n            </div>\n        )\n    }\n}","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Comments/CommentsEdit.tsx",["113"],"import React from 'react'\nimport { TextField, Button } from '@material-ui/core'\n// import APIURL from '../../helpers/environment'\n\ntype Props = {\n    commentUpdated: any,\n    token: string,\n    updateOff: () => void,\n    fetchItems: () => void,\n    editComment: any | null\n}\n\ntype State = {\n    editTitle: string,\n    editBody: string,\n    id: number | null,\n    comment: any | null\n}\n\nexport default class CommentsEdit extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            editTitle: '',\n            editBody: '',\n            id: this.props.editComment ? this.props.editComment.id : null,\n            comment: []\n\n        }\n    }\n\n    handleCommentUpdate = () => {\n        const url = `http://localhost:4000/comment/${this.props.editComment.id}`\n\n        fetch(url, {\n            method: 'PUT',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token\n            }),\n            body: JSON.stringify({ Title: this.state.editTitle, Body: this.state.editBody })\n        })\n            .then(() => {\n                this.props.updateOff();\n                this.props.fetchItems();\n            })\n    }\n\n    componentDidUpdate(prevProps: any) {\n        if (this.props != prevProps) {\n            this.setState({\n                comment: this.props.editComment\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <TextField\n                        type=\"text\"\n                        value={this.state.editTitle}\n                        onChange={(e) => this.setState({\n                            editTitle: e.currentTarget.value\n                        })} />\n                    <TextField\n                        type=\"text\"\n                        value={this.state.editBody}\n                        onChange={(e) => this.setState({\n                            editBody: e.currentTarget.value\n                        })} />\n                    <Button id=\"button\" onClick={this.handleCommentUpdate}>Edit Comments</Button>\n                </form>\n            </div>\n        )\n    }\n\n\n}","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Vibes/Playlist/PlaylistTable.tsx",["114"],"import React from 'react'\nimport { Button, Card, CardContent } from '@material-ui/core'\n\ntype Props = {\n    playlist: [],\n    deletePlaylist: any | null,\n    updateOn: () => void,\n    token: string,\n    fetchItems: () => void\n}\n\n\nexport default class PlaylistTable extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props)\n    }\n\n    deletePlaylist = (playlist: any) => {\n        const url = `http://localhost:4000/playlist/${playlist.id}`\n        fetch(url, {\n            method: 'DELETE',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token\n            })\n        }).then(() => this.props.fetchItems())\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.playlist ? this.props.playlist.map((playlist: any) => (\n                    <Card id=\"delete\" key={playlist.id}>\n                        <CardContent>{playlist.Title}</CardContent>\n                        <CardContent>{playlist.Songs}</CardContent>\n\n                        <Button id=\"button\" variant=\"outlined\"\n                            onClick={() => { this.deletePlaylist(playlist) }}> Delete\n                        </Button>\n                    </Card>\n                )) : undefined}\n            </div>\n        )\n    }\n}\n\n","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Comments/CommentsTable.tsx",["115"],"import React from 'react'\nimport { Button, Card, CardContent } from '@material-ui/core'\n// import APIURL from '../../helpers/environment'\n\ntype Props = {\n    comment: [],\n    deleteComment: any | null,\n    updateOn: () => void,\n    token: string,\n    fetchItems: () => void\n}\n\n\nexport default class PlaylistTable extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props)\n    }\n\n    deletePlaylist = (comment: any) => {\n        const url = `http://localhost:4000/comment/${comment.id}`\n        fetch(url, {\n            method: 'DELETE',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token\n            })\n        }).then(() => this.props.fetchItems())\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.comment ? this.props.comment.map((comment: any) => (\n                    <Card id=\"delete\" key={comment.id}>\n                        <CardContent>{comment.Title}</CardContent>\n                        <CardContent>{comment.Body}</CardContent>\n\n                        <Button id=\"button\" variant=\"outlined\"\n                            onClick={() => { this.deletePlaylist(comment) }}> Delete\n                        </Button>\n                    </Card>\n                )) : undefined}\n            </div>\n        )\n    }\n}","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/helpers/environment.tsx",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":2,"column":27,"nodeType":"122","messageId":"123","endLine":2,"endColumn":33},{"ruleId":"124","severity":1,"message":"125","line":2,"column":24,"nodeType":"122","messageId":"123","endLine":2,"endColumn":29},{"ruleId":"116","replacedBy":"126"},{"ruleId":"118","replacedBy":"127"},{"ruleId":"120","severity":1,"message":"128","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":17},{"ruleId":"120","severity":1,"message":"129","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":16},{"ruleId":"120","severity":1,"message":"130","line":2,"column":18,"nodeType":"122","messageId":"123","endLine":2,"endColumn":22},{"ruleId":"120","severity":1,"message":"131","line":2,"column":24,"nodeType":"122","messageId":"123","endLine":2,"endColumn":35},{"ruleId":"120","severity":1,"message":"132","line":2,"column":37,"nodeType":"122","messageId":"123","endLine":2,"endColumn":46},{"ruleId":"120","severity":1,"message":"128","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":17},{"ruleId":"120","severity":1,"message":"129","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":16},{"ruleId":"120","severity":1,"message":"130","line":2,"column":18,"nodeType":"122","messageId":"123","endLine":2,"endColumn":22},{"ruleId":"120","severity":1,"message":"131","line":2,"column":24,"nodeType":"122","messageId":"123","endLine":2,"endColumn":35},{"ruleId":"120","severity":1,"message":"132","line":2,"column":37,"nodeType":"122","messageId":"123","endLine":2,"endColumn":46},{"ruleId":"120","severity":1,"message":"133","line":4,"column":5,"nodeType":"122","messageId":"123","endLine":4,"endColumn":14},{"ruleId":"120","severity":1,"message":"134","line":5,"column":5,"nodeType":"122","messageId":"123","endLine":5,"endColumn":11},{"ruleId":"120","severity":1,"message":"135","line":6,"column":5,"nodeType":"122","messageId":"123","endLine":6,"endColumn":18},{"ruleId":"120","severity":1,"message":"136","line":7,"column":5,"nodeType":"122","messageId":"123","endLine":7,"endColumn":18},{"ruleId":"120","severity":1,"message":"137","line":8,"column":5,"nodeType":"122","messageId":"123","endLine":8,"endColumn":16},{"ruleId":"120","severity":1,"message":"138","line":9,"column":5,"nodeType":"122","messageId":"123","endLine":9,"endColumn":15},{"ruleId":"120","severity":1,"message":"139","line":11,"column":5,"nodeType":"122","messageId":"123","endLine":11,"endColumn":15},{"ruleId":"120","severity":1,"message":"140","line":12,"column":5,"nodeType":"122","messageId":"123","endLine":12,"endColumn":15},{"ruleId":"120","severity":1,"message":"141","line":35,"column":13,"nodeType":"122","messageId":"123","endLine":35,"endColumn":15},{"ruleId":"142","severity":1,"message":"143","line":58,"column":24,"nodeType":"144","messageId":"145","endLine":58,"endColumn":26},{"ruleId":"120","severity":1,"message":"133","line":4,"column":5,"nodeType":"122","messageId":"123","endLine":4,"endColumn":14},{"ruleId":"120","severity":1,"message":"134","line":5,"column":5,"nodeType":"122","messageId":"123","endLine":5,"endColumn":11},{"ruleId":"120","severity":1,"message":"135","line":6,"column":5,"nodeType":"122","messageId":"123","endLine":6,"endColumn":18},{"ruleId":"120","severity":1,"message":"136","line":7,"column":5,"nodeType":"122","messageId":"123","endLine":7,"endColumn":18},{"ruleId":"120","severity":1,"message":"137","line":8,"column":5,"nodeType":"122","messageId":"123","endLine":8,"endColumn":16},{"ruleId":"120","severity":1,"message":"138","line":9,"column":5,"nodeType":"122","messageId":"123","endLine":9,"endColumn":15},{"ruleId":"120","severity":1,"message":"139","line":11,"column":5,"nodeType":"122","messageId":"123","endLine":11,"endColumn":15},{"ruleId":"120","severity":1,"message":"140","line":12,"column":5,"nodeType":"122","messageId":"123","endLine":12,"endColumn":15},{"ruleId":"142","severity":1,"message":"143","line":50,"column":24,"nodeType":"144","messageId":"145","endLine":50,"endColumn":26},{"ruleId":"146","severity":1,"message":"147","line":14,"column":5,"nodeType":"148","messageId":"149","endLine":16,"endColumn":6},{"ruleId":"146","severity":1,"message":"147","line":15,"column":5,"nodeType":"148","messageId":"149","endLine":17,"endColumn":6},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"@typescript-eslint/no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-unused-vars","'Route' is defined but never used.",["150"],["151"],"'PropTypes' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'TextField' is defined but never used.","'Container' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","'IconButton' is defined but never used.","'Typography' is defined but never used.","'ButtonBase' is defined but never used.","'id' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]