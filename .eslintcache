[{"/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/index.tsx":"1","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/reportWebVitals.ts":"2","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/App.tsx":"3","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Auth/FunctionalAuth.js":"4","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Auth/Auth.tsx":"5","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Auth/Signup.tsx":"6","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Auth/SignIn.tsx":"7","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Vibes/Playlist/PlaylistCreate.tsx":"8","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Vibes/Playlist/PlaylistIndex.tsx":"9","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Vibes/Playlist/PlaylistEdit.tsx":"10","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Comments/CommentsIndex.tsx":"11","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Comments/CommentsCreate.tsx":"12","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Comments/CommentsEdit.tsx":"13","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Vibes/Playlist/PlaylistTable.tsx":"14","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Comments/CommentsTable.tsx":"15"},{"size":500,"mtime":1609359376586,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1608306282708,"results":"18","hashOfConfig":"17"},{"size":1197,"mtime":1610482827779,"results":"19","hashOfConfig":"17"},{"size":280,"mtime":1609438577095,"results":"20","hashOfConfig":"17"},{"size":1412,"mtime":1610315843862,"results":"21","hashOfConfig":"17"},{"size":2213,"mtime":1610090741479,"results":"22","hashOfConfig":"17"},{"size":1879,"mtime":1610218890805,"results":"23","hashOfConfig":"17"},{"size":1768,"mtime":1610305220533,"results":"24","hashOfConfig":"17"},{"size":3510,"mtime":1610492937057,"results":"25","hashOfConfig":"17"},{"size":2507,"mtime":1610460269996,"results":"26","hashOfConfig":"17"},{"size":2992,"mtime":1610492749092,"results":"27","hashOfConfig":"17"},{"size":1588,"mtime":1610416239679,"results":"28","hashOfConfig":"17"},{"size":2143,"mtime":1610482810170,"results":"29","hashOfConfig":"17"},{"size":1310,"mtime":1610482278173,"results":"30","hashOfConfig":"17"},{"size":1295,"mtime":1610496288262,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1lz00tl",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/index.tsx",[],["71","72"],"/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/reportWebVitals.ts",[],"/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/App.tsx",["73"],"/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Auth/FunctionalAuth.js",["74"],"import Auth from './Auth'\nimport {BrowserRouter, Route, Switch } from 'react-router-dom'\n\nfunction FunctionalAuth() {\n    return (\n        <div>\n            <BrowserRouter>\n                <Switch>\n                    <Auth />\n                </Switch>\n            </BrowserRouter>\n        </div>\n    )\n}\n\nexport default FunctionalAuth",["75","76"],"/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Auth/Auth.tsx",["77"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport Signup from './Signup'\nimport SignIn from './SignIn'\n\n\ninterface AuthState {\n    isLogin: boolean\n}\n\ntype AuthProps = {\n    updateToken: (newToken: string) => void\n}\n\nexport default class Auth extends React.Component<AuthProps, AuthState> {\n    constructor(props: AuthProps) {\n        super(props);\n        this.state = {\n            isLogin: true\n        }\n    }\n\n    isLoginHandler() {\n        this.setState({\n            isLogin: !this.state.isLogin\n        })\n    }\n\n    // toggle = (e: React.SyntheticEvent) => {\n    //     e.preventDefault();\n    //     if (this.state.isLogin === false) {\n    //         return this.setState({\n    //             isLogin: true\n    //         })\n    //     }\n    // }\n\n    render() {\n\n\n        return (\n            <div>\n                {/* {this.state.isLogin ? ( */}\n                <SignIn\n                    isLogin={this.state.isLogin}\n                    isLoginHandler={this.isLoginHandler.bind(this)}\n                    updateToken={this.props.updateToken}\n                />\n                {/* // ): ( */}\n                <Signup\n                    isLogin={this.state.isLogin}\n                    isLoginHandler={this.isLoginHandler.bind(this)}\n                    updateToken={this.props.updateToken}\n                />\n                {/* // )} */}\n\n            </div>\n        )\n    }\n\n}\n\n","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Auth/Signup.tsx",["78","79","80"],"import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport PropTypes from 'prop-types'\n\n\ntype SignUpFields = {\n    username: string,\n    password: string,\n    email: string,\n   \n}\n\ntype SignUpProps = {\n    isLogin: boolean,\n    isLoginHandler: () => void,\n    updateToken: (newToken: string) => void\n}\n\nexport default class SignUp extends React.Component<SignUpProps, SignUpFields>{\n    constructor(props: SignUpProps) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            email: '',\n    \n        }\n    }\n\n    onChange(e: any) {\n        this.setState(e.target.value)\n    }\n\n    validateForm = () => {\n\n    }\n\n    handleSubmit = (e: React.SyntheticEvent) => {\n        e.preventDefault();\n\n\n        const url = 'http://localhost:4000/user/register'\n\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({ username: this.state.username, password: this.state.password, email:this.state.email}),\n            headers: new Headers ({\n                'Content-Type' : 'application/json'\n            })\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log(data)\n        })\n    }\n\n    render(){\n        return(\n            <div>\n                <h1>Sign Up - Join VibeCast</h1>\n                <form onSubmit={this.handleSubmit.bind(this)} >\n                <input type=\"text\" value={this.state.email} onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({email: e.currentTarget.value})} placeholder=\"email\"></input>\n                <br />\n                <input type=\"text\" value={this.state.username} onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({username: e.currentTarget.value})} placeholder=\"username\"></input>\n                <br />\n                <input type=\"text\" value={this.state.password}  onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({password: e.currentTarget.value})} placeholder=\"password\"></input><br />\n\n                \n                <button type=\"submit\">Submit</button>\n                </form>       \n            </div>\n        )\n    }\n}","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Auth/SignIn.tsx",["81","82"],"import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\ntype SignInFields = {\n    username: string,\n    password: string\n}\n\ntype SignInProps ={\n    isLogin: boolean,\n    updateToken: (newToken: string) => void,\n    isLoginHandler: () => void\n}\n\n\nexport default class SignIn extends React.Component<SignInProps, SignInFields>{\n    constructor(props: SignInProps){\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        }\n    }\n\n    handleSubmit= (e: React.SyntheticEvent) => {\n        e.preventDefault()\n        const url = 'http://localhost:4000/user/login'\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({username: this.state.username, password: this.state.password}),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        })\n        .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                this.props.updateToken(data.token)\n            })\n\n    }\n\n    render(){\n        return(\n            <div>\n                <h1>Sign In - Welcome to VibeCast</h1>\n                <form onSubmit={this.handleSubmit.bind(this)}>\n                <input type=\"text\" value={this.state.username} onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({username: e.currentTarget.value})} placeholder=\"username\"></input>\n                <br />\n                <input type=\"text\" value={this.state.password} onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({password: e.currentTarget.value})} placeholder=\"password\"></input>\n                <br />\n                \n\n                \n                <button type=\"submit\">Submit</button>\n                </form>       \n            </div>\n        )\n    }\n}\n\n","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Vibes/Playlist/PlaylistCreate.tsx",["83","84","85","86","87","88","89","90","91"],"import React from 'react'\nimport {\n    Button,\n    Container,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    IconButton,\n    TextField,\n    Typography\n} from '@material-ui/core';\n\ntype Props = {\n    token: string ,\n\n    \n}\n\ntype State = {\n    title: string,\n    songs: string\n}\n\nexport default class PlaylistCreate extends React.Component<Props, State>{\n    constructor(props: Props){\n        super(props)\n        this.state = {\n            title: '',\n            songs: ''\n        }\n    }\n\n    onChange(e: any) {\n        this.setState(e.target.value)\n    }\n\n    handleSubmit = (e: React.SyntheticEvent) => {\n        e.preventDefault();\n\n         console.log(this.props.token, this.state.title, this.state.songs)\n\n        const url = 'http://localhost:4000/playlist/createplaylist'\n        fetch(url, {\n            method: 'POST',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token\n            }),\n            body: JSON.stringify({Title: this.state.title, Songs: this.state.songs})\n        })\n        .then((res) =>  res.json())\n        .then((data) => {\n            \n            \n            console.log(data);\n            \n        })      \n    }\n\n\n   \n\n    render() {\n        return(\n      <div>\n            <form onSubmit={this.handleSubmit}>\n            <input type=\"text\" value={this.state.title} onChange={(e) => this.setState({title: e.currentTarget.value})} placeholder=\"Playlist title\"/>\n            <input type=\"text\" value={this.state.songs} onChange={(e) => this.setState({songs: e.currentTarget.value})} placeholder=\"Song name - Arist,\"/>\n            <button type=\"submit\">Submit</button>\n\n\n            </form>\n        </div>\n        )\n    }\n\n}","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Vibes/Playlist/PlaylistIndex.tsx",[],"/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Vibes/Playlist/PlaylistEdit.tsx",["92","93"],"import React from 'react';\nimport { TextField } from '@material-ui/core'\n\ntype Props = {\n    playlistUpdated: any,\n    token: string,\n    updateOff: () => void,\n    fetchItems: () => void\n    editPlaylist: any | null\n}\n\ntype State = {\n    editTitle: string,\n    editSongs: string,\n    id: number | null,\n    playlist: any | null\n\n}\n\nexport default class PlaylistEdit extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            editTitle: '',\n            editSongs: '',\n            id: this.props.editPlaylist ? this.props.editPlaylist.id : null,\n            playlist: []\n        }\n    }\n\n\n\n    handlePlaylistUpdate = () => {\n        let id = {\n            id: this.state.id\n        }\n\n        const url = `http://localhost:4000/playlist/${this.props.editPlaylist.id}`\n        fetch(url, {\n            method: 'PUT',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token\n            }),\n            body: JSON.stringify({ Title: this.state.editTitle, Songs: this.state.editSongs })\n        }).then(() => {\n            this.props.updateOff();\n            this.props.fetchItems();\n\n        })\n    }\n    // editPlaylistForm() {\n    //     this.props.updateOff()\n    // }\n\n    componentDidUpdate(prevProps: any) {\n        if (this.props != prevProps) {\n            this.setState({\n                playlist: this.props.editPlaylist\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <TextField\n                        type=\"text\"\n                        value={this.state.editTitle}\n                        onChange={(e) => this.setState({ editTitle: e.currentTarget.value })} />\n\n                    <TextField\n                        type=\"text\"\n                        value={this.state.editSongs}\n                        onChange={(e) => this.setState({ editSongs: e.currentTarget.value })} />\n                    {/* <input type=\"text\" value={this.state.editTitle} onChange={(e) => this.setState({ editTitle: e.currentTarget.value })} /> */}\n                    {/* <input type=\"text\" value={this.state.editSongs}\n                        onChange={(e) => this.setState({ editSongs: e.currentTarget.value })}\n                    /> */}\n                    <button onClick={this.handlePlaylistUpdate}>Edit Playlist</button>\n                </form>\n            </div>\n        )\n    }\n}\n","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Comments/CommentsIndex.tsx",[],"/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Comments/CommentsCreate.tsx",[],"/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Comments/CommentsEdit.tsx",["94"],"/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Vibes/Playlist/PlaylistTable.tsx",["95","96"],"import React from 'react'\nimport { Button, Card, CardContent } from '@material-ui/core'\n\ntype Props = {\n    playlist: [],\n    deletePlaylist: any | null,\n    updateOn: () => void,\n    token: string,\n    fetchItems: () => void\n}\n\n\nexport default class PlaylistTable extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props)\n    }\n\n    deletePlaylist = (playlist: any) => {\n        const url = `http://localhost:4000/playlist/${playlist.id}`\n        fetch(url, {\n            method: 'DELETE',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token\n            })\n        }).then(() => this.props.fetchItems())\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.playlist ? this.props.playlist.map((playlist: any) => (\n                    <Card key={playlist.id}>\n                        <CardContent>{playlist.Title}</CardContent>\n                        <CardContent>{playlist.Songs}</CardContent>\n\n                        <Button variant=\"outlined\"\n                            onClick={() => { this.deletePlaylist(playlist) }}> Delete\n                        </Button>\n                    </Card>\n                )) : undefined}\n            </div>\n        )\n    }\n}\n\n","/Users/sydneynorris/Desktop/RedBadgeClient/vibe-cast/src/Components/Comments/CommentsTable.tsx",["97"],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":2,"column":27,"nodeType":"104","messageId":"105","endLine":2,"endColumn":33},{"ruleId":"106","severity":1,"message":"107","line":2,"column":24,"nodeType":"104","messageId":"105","endLine":2,"endColumn":29},{"ruleId":"98","replacedBy":"108"},{"ruleId":"100","replacedBy":"109"},{"ruleId":"102","severity":1,"message":"110","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":17},{"ruleId":"102","severity":1,"message":"111","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":17},{"ruleId":"102","severity":1,"message":"112","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":14},{"ruleId":"102","severity":1,"message":"110","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":17},{"ruleId":"102","severity":1,"message":"111","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":17},{"ruleId":"102","severity":1,"message":"112","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":14},{"ruleId":"102","severity":1,"message":"112","line":3,"column":5,"nodeType":"104","messageId":"105","endLine":3,"endColumn":11},{"ruleId":"102","severity":1,"message":"113","line":4,"column":5,"nodeType":"104","messageId":"105","endLine":4,"endColumn":14},{"ruleId":"102","severity":1,"message":"114","line":5,"column":5,"nodeType":"104","messageId":"105","endLine":5,"endColumn":11},{"ruleId":"102","severity":1,"message":"115","line":6,"column":5,"nodeType":"104","messageId":"105","endLine":6,"endColumn":18},{"ruleId":"102","severity":1,"message":"116","line":7,"column":5,"nodeType":"104","messageId":"105","endLine":7,"endColumn":18},{"ruleId":"102","severity":1,"message":"117","line":8,"column":5,"nodeType":"104","messageId":"105","endLine":8,"endColumn":16},{"ruleId":"102","severity":1,"message":"118","line":9,"column":5,"nodeType":"104","messageId":"105","endLine":9,"endColumn":15},{"ruleId":"102","severity":1,"message":"111","line":10,"column":5,"nodeType":"104","messageId":"105","endLine":10,"endColumn":14},{"ruleId":"102","severity":1,"message":"119","line":11,"column":5,"nodeType":"104","messageId":"105","endLine":11,"endColumn":15},{"ruleId":"102","severity":1,"message":"120","line":34,"column":13,"nodeType":"104","messageId":"105","endLine":34,"endColumn":15},{"ruleId":"121","severity":1,"message":"122","line":57,"column":24,"nodeType":"123","messageId":"124","endLine":57,"endColumn":26},{"ruleId":"121","severity":1,"message":"122","line":49,"column":24,"nodeType":"123","messageId":"124","endLine":49,"endColumn":26},{"ruleId":"102","severity":1,"message":"125","line":2,"column":37,"nodeType":"104","messageId":"105","endLine":2,"endColumn":42},{"ruleId":"126","severity":1,"message":"127","line":14,"column":5,"nodeType":"128","messageId":"129","endLine":16,"endColumn":6},{"ruleId":"126","severity":1,"message":"127","line":14,"column":5,"nodeType":"128","messageId":"129","endLine":16,"endColumn":6},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"@typescript-eslint/no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-unused-vars","'Route' is defined but never used.",["130"],["131"],"'PropTypes' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","'IconButton' is defined but never used.","'Typography' is defined but never used.","'id' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Table' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]